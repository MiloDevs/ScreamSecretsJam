name: Build and Publish Game ðŸš€
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - testsystems
jobs:
  test:
    name: Test Project
    runs-on: ubuntu-latest
    permissions: write-all
    environment: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: ScreamSecretsGame/Library
          key: Library-${{ hashFiles('ScreamSecretsGame/Assets/**', 'ScreamSecretsGame/Packages/**', 'ScreamSecretsGame/ProjectSettings/**') }}
          restore-keys: |
            Library-
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: ./ScreamSecretsGame
  build:
    name: Build Project
    needs: test
    runs-on: ubuntu-latest
    permissions: write-all
    environment: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: ScreamSecretsGame/Library
          key: Library-${{ hashFiles('ScreamSecretsGame/Assets/**', 'ScreamSecretsGame/Packages/**', 'ScreamSecretsGame/ProjectSettings/**') }}
          restore-keys: |
            Library-
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true
          projectPath: ./ScreamSecretsGame
      - name: Prepare build for itch.io
        run: |
          sudo mkdir -p itch-build
          sudo mv build/WebGL/WebGL/* itch-build/
          sudo chown -R $USER:$USER itch-build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: itch-build
          path: itch-build
  publish:
    name: Publish to itch.io
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: itch-build
          path: itch-build
      - name: Publish to itch.io
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: webgl
          ITCH_GAME: scream-secrets-game
          ITCH_USER: milodevs
          PACKAGE: itch-build
